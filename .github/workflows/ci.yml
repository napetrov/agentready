name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npx tsc --noEmit
      
    - name: Run tests
      run: npm test
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key' }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN || 'test-token' }}
        
    - name: Run test coverage
      run: npm run test:coverage
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY || 'test-key' }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN || 'test-token' }}
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      if: matrix.node-version == '20.x'
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Check build output
      run: |
        echo "Build completed successfully"
        ls -la .next/
        echo "API routes built:"
        ls -la .next/server/app/api/

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      continue-on-error: true
      
    - name: Check for vulnerabilities
      run: |
        if npm audit --audit-level=high --json | jq -e '.vulnerabilities | length > 0' > /dev/null; then
          echo "High severity vulnerabilities found!"
          npm audit --audit-level=high
          exit 1
        else
          echo "No high severity vulnerabilities found"
        fi

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Start application
      run: |
        npm start &
        sleep 10
        echo "Application started"
        
    - name: Test API endpoints
      run: |
        # Test basic API health
        curl --fail-with-body http://localhost:3000/api/analyze -X POST \
          -H "Content-Type: application/json" \
          -d '{"repoUrl": "https://github.com/vercel/next.js"}' \
          --max-time 60
          
    - name: Cleanup
      if: always()
      run: |
        pkill -f "npm start" || true
        pkill -f "next start" || true